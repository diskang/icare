<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sjtu.icare.modules.sys.persistence.UserMapper">

    <cache />
  
  	<resultMap id="UserMap" type="com.sjtu.icare.modules.sys.entity.User">
        <id property="id" column="id" />
        <result property="username" column="username" />
        <result property="name" column="name" />
        <result property="password" column="password" />
        <result property="userType" column="user_type" />
        <result property="registerDate" column="register_date" />
        <result property="cancelDate" column="cancel_date" />
        <result property="gender" column="gender" />
        <result property="photoUrl" column="photo_url" />
        <result property="identityNo" column="identity_no" />
        <result property="age" column="age" />
        <result property="nationality" column="nationality" />
        <result property="marriage" column="marriage" />
        <result property="nativePlace" column="native_place" />
        <result property="birthday" column="birthday" />
        <result property="politicalStatus" column="political_status" />
        <result property="education" column="education" />
        <result property="phoneNo" column="phone_no" />
        <result property="zipCode" column="zip_code" />
        <result property="residenceAddress" column="residence_address" />
        <result property="householdAddress" column="household_address" />
        <result property="email" column="email" />
        <result property="wechatId" column="wechat_id" />
        <result property="geroId" column="gero_id" />
        <result property="unionId" column="union_id" />
        <result property="subscribe" column="subscribe" />
        <result property="subscribeTime" column="subscribe_time" />
    </resultMap>
	
	<sql id="userColumns">
		id,
        username,
        name,
        password,
        user_type as userType,
        user_id as userId,
        register_date as registerDate,
        cancel_date as cancelDate,
        photo_url as photoUrl,
        gero_id as geroId
	</sql>
	
	<sql id="userColumnsComplete">
		T_USER.id,
        T_USER.username,
        T_USER.name,
        T_USER.password,
        T_USER.user_type,
        T_USER.user_id,
        T_USER.register_date,
        T_USER.cancel_date,
        T_USER.photo_url,
        T_USER.gero_id
	</sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultMap="UserMap">
		SELECT
			*
		FROM T_USER
		WHERE id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByUsername" resultMap="UserMap" parameterType="User">
		SELECT
			*
		FROM T_USER
		WHERE username = #{username} AND cancel_date is null
	</select>
	
	<!-- 根据用户类别和用户ID查询用户 -->
	<select id="getByUserId" resultMap="UserMap" parameterType="User">
		SELECT
			*
		FROM T_USER
		WHERE user_type = #{userType} AND user_id = #{userId} AND cancel_date is null
	</select>
	
	<select id="getByWechatId" resultMap="UserMap" parameterType="User">
		SELECT
			*
		FROM T_USER
		WHERE wechat_id = #{wechatId} AND cancel_date is null
	</select>
	
    <!-- 
    <select id="getByUseridUsertype" resultType="User" parameterType="Map">
        SELECT
            <include refid="userColumns"/>
        FROM T_USER
        WHERE user_type = 3 AND user_id = #{userId} AND cancel_date is null
    </select>
    -->
    
	<!-- 分页查询用户信息 -->
	<select id="findList" resultMap="UserMap">
		SELECT
			*
		FROM T_USER
		WHERE cancel_date is null
		
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<!-- <if test="!currentUser.admin">
			AND a.id != '1'
		</if> -->
		<if test="username != null and username != ''">
			AND username like '%'||#{username}||'%'
		</if>
		<if test="name != null and name != ''">
			AND name like '%'||#{name}||'%'
		</if>
		<!-- 数据范围过滤 -->
		<!-- ${sqlMap.dsf} -->
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY id
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<!-- <select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.name
	</select> -->
	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultMap="UserMap">
		SELECT
			*
		FROM T_USER
		WHERE cancel_date is null
		ORDER BY name
	</select>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM T_USER
		WHERE cancel_date is null
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO T_USER(
	        username,
	        name,
	        password,
	        user_type,
	        user_id,
	        register_date
		) VALUES (
			#{username}, 
			#{password}, 
			#{name},
			#{userType}, 
			#{userId}, 
			#{registerDate}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE T_USER SET 
			username = #{username}, 
			password = #{password}, 
			name = #{name}, 
			user_type = #{userType}, 
			user_id = #{userId}, 
			register_date = #{registerDate}
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE T_USER_ROLES WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO T_USER_ROLES(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id} <!-- FROM dual -->
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
		    SELECT @@IDENTITY
	    </selectKey>
		UPDATE T_USER SET 		
			photo_url = #{photoUrl} ,
			name = #{name}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE T_USER SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE T_USER SET 
			cancel_date = #{cancelDate}
		WHERE id = #{id}
	</update>
  
    <!-- <select id="findByUsername" resultType="User" parameterType="String">
        SELECT
            id,
            username,
            password,
            user_type as userType,
            user_id as userId,
            register_date as registerDate,
            cancel_date as cancelDate
        FROM T_USER
        WHERE T_USER.username = #{value}
            AND T_USER.cancel_date is null
    </select> -->

    <!-- <update id="updatePasswordById"  parameterType="map">
        UPDATE T_USER
        SET password = #{password}
        WHERE T_USER.id = #{id}
    </update> -->

    <!-- <insert id="save" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into T_USER(
            username, password, 
            user_type, user_id, 
            register_date, cancel_date
        )
        values(
            #{username}, #{password}, 
            #{userType}, #{userId},
            #{registerDate}, #{cancelDate}
        )
    </insert> -->
       
    <!--给cancel_date赋值就表示删除-->
    <!-- <update id="delete"  parameterType="map">
        UPDATE T_USER
        SET cancel_date = #{cancelDate}
        WHERE T_USER.id = #{id}
    </update> -->

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
    
        INSERT INTO
            T_USER(
                password,
                gero_id,
                user_type, 
                user_id, 
                username, 
                name, 
                register_date, 
                gender, 
                photo_url, 
                identity_no, 
                age, 
                nationality, 
                marriage, 
                native_place, 
                birthday, 
                political_status, 
                education, 
                phone_no, 
                zip_code, 
                residence_address, 
                household_address, 
                wechat_id,
                email) 
        VALUES
            (#{password},
            #{geroId},
            #{userType}, 
            #{userId}, 
            #{username}, 
            #{name}, 
            #{registerDate}, 
            #{gender}, 
            #{photoUrl}, 
            #{identityNo}, 
            #{age}, 
            #{nationality}, 
            #{marriage}, 
            #{nativePlace}, 
            #{birthday}, 
            #{politicalStatus}, 
            #{education}, 
            #{phoneNo}, 
            #{zipCode}, 
            #{residenceAddress}, 
            #{householdAddress}, 
            #{wechatId},
            #{email})
            
    </insert>
    
    <update id="updateUser">
    
        UPDATE
            T_USER
        <set>
            <if test="password != null">
            T_USER.password = #{password},
            </if>
            <if test="geroId != null">
            T_USER.gero_id = #{geroId},
            </if>
            <if test="userType != null">
            T_USER.user_type = #{userType},
            </if>
            <if test="userId != null">
            T_USER.user_id = #{userId},
            </if>
			<if test="username != null">
            T_USER.username = #{username},
			</if>            
			<if test="name != null">
            T_USER.name = #{name},
            </if>
            <!--  T_USER.register_date = #{registerDate},  -->
            <if test="gender != null">
            T_USER.gender = #{gender},
            </if>
            <if test="photoUrl != null">
            T_USER.photo_url = #{photoUrl},
            </if>
            <if test="identityNo != null">
            T_USER.identity_no = #{identityNo},
            </if>
            <if test="age != null">
            T_USER.age = #{age},
            </if>
            <if test="nationality != null">
            T_USER.nationality = #{nationality},
            </if>
            <if test="marriage != null">
            T_USER.marriage = #{marriage},
            </if>
            <if test="nativePlace != null">
            T_USER.native_place = #{nativePlace},
            </if>
            <if test="birthday != null">
            T_USER.birthday = #{birthday},
            </if>
            <if test="politicalStatus != null">
            T_USER.political_status = #{politicalStatus},
            </if>
            <if test="education != null">
            T_USER.education = #{education},
            </if>
            <if test="phoneNo != null">
            T_USER.phone_no = #{phoneNo},
            </if>
            <if test="zipCode != null">
            T_USER.zip_code = #{zipCode},
            </if>
            <if test="residenceAddress != null">
            T_USER.residence_address = #{residenceAddress},
            </if>
            <if test="householdAddress != null">
            T_USER.household_address = #{householdAddress},
            </if>
            <if test="wechatId != null">
            T_USER.wechat_id = #{wechatId},
            </if>
             <if test="subscribe != null">
            T_USER.subscribe = #{subscribe},
            </if>
            <if test="email != null">
            T_USER.email = #{email}
            </if>
        </set>
        WHERE
            T_USER.id = #{id}
            
    </update>
    
</mapper>